version: '3'
tasks:
  default:
    cmds:
      - task: cloc
      - task: lint
      - task: swagger
      - echo "Both done"

  build:
    cmds:
      - go build -v -o tmp github.com/flowline-io/flowbot/cmd

  run:
    cmds:
      - go run github.com/flowline-io/flowbot/cmd

  cloc:
    cmds:
      - cloc --exclude-dir=node_modules --exclude-ext=json --out=./cloc/{{ now.Format "2006-01-02" }}.txt .
    generates:
      - ./cloc/{{ now.Format "2006-01-02" }}.txt

  lint:
    cmds:
      - revive -config revive.toml -formatter friendly ./...

  swagger:
    cmds:
      - swag init -g cmd/main.go
      - swag fmt -g cmd/main.go

  tools:
    cmds:
      - go install github.com/go-task/task/v3/cmd/task@latest
      - go install github.com/mgechev/revive@latest
      - go install github.com/swaggo/swag/cmd/swag@latest
      - go install golang.org/x/vuln/cmd/govulncheck@latest
      - go install github.com/go-task/task/v3/cmd/task@latest
      - go install -tags 'mysql' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
      - cmd: winget install AlDanial.Cloc
        platforms: [windows]
      - cmd: sudo apt install cloc
        platforms: [linux]

  secure:
    cmds:
      - govulncheck ./...

  dao:
    cmds:
      - go run github.com/flowline-io/flowbot/cmd/composer dao

  migrate:
    cmds:
      - go run github.com/flowline-io/flowbot/cmd/composer migrate import

  migration:
    cmds:
      - go run github.com/flowline-io/flowbot/cmd/composer migrate migration -name {{ .CLI_ARGS }}
