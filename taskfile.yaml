version: "3"
tasks:
  default:
    cmds:
      - task: tidy
      - task: swagger
      - task: format
      - task: lint
      - task: scc
      - echo "Both done"

  check:
    cmds:
      - task: lint
      - task: secure
      - task: leak
      - task: gosec
      - echo "Both done"

  build:
    cmds:
      - go build -v -o tmp github.com/flowline-io/flowbot/cmd

  build:agent:
    cmds:
      - go build -v -o tmp github.com/flowline-io/flowbot/cmd/agent

  run:
    cmds:
      - go run -tags swagger github.com/flowline-io/flowbot/cmd

  run:agent:
    cmds:
      - go run github.com/flowline-io/flowbot/cmd/agent

  cloc:
    cmds:
      - cloc --exclude-dir=node_modules --exclude-ext=json .

  scc:
    cmds:
      - scc > ./cloc/{{ now.Format "2006-01-02" }}.txt

  lint:
    cmds:
      - revive -config revive.toml -formatter friendly ./...

  swagger:
    cmds:
      - swag init -g cmd/main.go
      - swag fmt -g cmd/main.go

  tools:
    cmds:
      - go install github.com/go-task/task/v3/cmd/task@latest
      - go install github.com/mgechev/revive@latest
      - go install github.com/swaggo/swag/cmd/swag@latest
      - go install golang.org/x/vuln/cmd/govulncheck@latest
      - go install github.com/go-task/task/v3/cmd/task@latest
      - go install -tags 'mysql' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
      - go install github.com/hibiken/asynq/tools/asynq@latest
      - go install github.com/zricethezav/gitleaks/v8@v8.24.2
      - go install github.com/goreleaser/goreleaser/v2@latest
      - go install github.com/air-verse/air@latest
      - go install github.com/securego/gosec/v2/cmd/gosec@latest
      - go install github.com/boyter/scc/v3@latest
      - npm install -g prettier

  secure:
    cmds:
      - govulncheck ./...

  dao:
    cmds:
      - go run github.com/flowline-io/flowbot/cmd/composer dao

  migrate:
    cmds:
      - go run github.com/flowline-io/flowbot/cmd/composer migrate import

  migration:
    cmds:
      - go run github.com/flowline-io/flowbot/cmd/composer migrate migration -name {{ .CLI_ARGS }}

  tidy:
    cmds:
      - go mod tidy

  leak:
    cmds:
      - gitleaks git -v

  snapshot:
    cmds:
      - goreleaser release --snapshot --clean

  format:
    cmds:
      - go fmt ./...
      - npx prettier --write .

  air:
    cmds:
      - air --build.cmd "go build -o flowbot cmd/main.go" --build.bin "./flowbot"

  gosec:
    cmds:
      - gosec ./...
