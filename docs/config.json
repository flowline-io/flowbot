// The JSON comments are somewhat brittle. Don't try anything too fancy.
{
	// HTTP(S) address to listen on for websocket and long polling clients. Either a TCP host:port pair
	// or a path to Unix socket as "unix:/path/to/socket.sock".
	// The TCP port is either a numerical value or a canonical name, e.g. ":80" or ":https". May include
	// the host name, e.g. "localhost:80" or "hostname.example.com:https".
	// It could be blank: if TLS is not configured it will default to ":80", otherwise to ":443".
	// Can be overridden from the command line, see option --listen.
	"listen": ":6060",

	// Base URL path for serving streaming and large file API calls.
	// Can be overridden from the command line, see option --api_path.
	"api_path": "/",

	// Cache-Control header for static content in seconds. 39600 is 11 hours.
	"cache_control": 39600,

	// URL path for mounting the directory with static files.
	"static_mount": "/",

	// Salt for signing API key. 32 random bytes base64-encoded. Use 'keygen' tool (included in this
	// distro) to generate the API key and the salt.
	"api_key_salt": "T713/rYYgW7g4m3vG6zGRh7+FM1t0T8j13koXScOAj4=",

	// Maximum message size allowed from the clients in bytes (262144 = 256KB).
	// Media files with sizes greater than this limit are sent out of band.
	// Don't change this limit to a much higher value because it would likely cause crashes:
	// on Android & iOS due to a limit on the SQLite cursor window size;
	// on the server-side with MySQL adapter due to the limit on the sort buffer size.
	"max_message_size": 262144,

	// URL path for exposing runtime stats. Disabled if the path is blank or "-".
	// Could be overriden from the command line with --expvar.
	"expvar": "/debug/vars",

	// URL path for internal server status. Disabled if the path is blank or "-".
	// Could be overriden from the command line with --server_status.
	"server_status": "/debug/status",

	// Read IP address of the client from the HTTP header 'X-Forwarded-For'.
	// Useful when Tinode is behind a proxy. If missing, fallback to default RemoteAddr.
	"use_x_forwarded_for": true,

	// 2-letter country code to assign to sessions by default when the country isn't specified
	// by the client explicitly and it's impossible to infer it.
	// If missing, the server will default to "US".
	"default_country_code": "",

	// Large media/blob handlers: large files/images included in messages.
	"media": {
		// The name of the media handler to use.
		"use_handler": "fs",
		// Maximum size of uploaded file (8MB here for testing, maybe increase to 100MB = 104857600 in prod)
		"max_size": 8388608,
		// Garbage collection periodicity in seconds: unused or abandoned uploads are deleted.
		"gc_period": 60,
		// The number of unused/abandoned entries to delete in one pass.
		"gc_block_size": 100,
		// Configurations of individual handlers.
		"handlers": {
			// File system storage.
			"fs": {
				// File system location to store uploaded files. In case of a cluster it
				// must be accessible by all cluster members, i.e. a network drive like https://www.samba.org/
				"upload_dir": "uploads",
				// Origin URLs allowed to download/upload files, e.g. ["https://www.example.com", "http://example.com"].
				// Not necessary in most cases.
				// "cors_origins": ["*"]
			},
			// Amazon AWS S3 storage.
			// See detailed explanation at https://pkg.go.dev/github.com/aws/aws-sdk-go/aws#Config
			"s3":{
				// Use AWS console to get Access Key ID and Secret Access Key.
				// https://aws.amazon.com/blogs/security/wheres-my-secret-access-key/
				"access_key_id": "your_s3_access_key_id",
				"secret_access_key": "your_s3_secret_access_key",
				// Region where the bucket is hosted.
				"region": "s3 region, like us-east-2",
				// Name of the S3 bucket.
				"bucket": "your_s3_bucket_name",
				// Set this to `true` to disable SSL when sending requests. Defaults to `false`.
				"disable_ssl": false,
				// Set this to `true` to force the request to use path-style addressing,
				// i.e., `http://s3.amazonaws.com/BUCKET/KEY`. By default, the S3 client
				// will use virtual hosted bucket addressing when possible
				// (`http://BUCKET.s3.amazonaws.com/KEY`).
				"force_path_style": false,
				// An optional endpoint URL (hostname only or fully qualified URI)
				// that overrides the default generated endpoint for a client. Set this
				// to `""` to use the default generated endpoint.
				"endpoint": "",
				// Origin URLs allowed to download files, e.g. ["https://www.example.com", "http://example.com"].
				// See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin
				"cors_origins": ["*"]
			},
			// Minio storage.
			// See detailed explanation at https://pkg.go.dev/github.com/minio/minio-go
			"minio":{
				"access_key_id": "your_s3_access_key_id",
				"secret_access_key": "your_s3_secret_access_key",
				// Region where the bucket is hosted.
				"region": "s3 region, like us-east-2",
				// Name of the S3 bucket.
				"bucket": "your_bucket_name",
				// Set this to `true` to disable SSL when sending requests. Defaults to `false`.
				"disable_ssl": false,
				// Set this to `true` to force the request to use path-style addressing,
				// i.e., `http://s3.amazonaws.com/BUCKET/KEY`. By default, the S3 client
				// will use virtual hosted bucket addressing when possible
				// (`http://BUCKET.s3.amazonaws.com/KEY`).
				"force_path_style": false,
				// An optional endpoint URL (hostname only or fully qualified URI)
				// that overrides the default generated endpoint for a client. Set this
				// to `""` to use the default generated endpoint.
				"endpoint": "",
				// Origin URLs allowed to download files, e.g. ["https://www.example.com", "http://example.com"].
				// See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin
				"cors_origins": ["*"]
			}
		}
	},

	// TLS (httpS) configuration. Applies to both web and gRPC interfaces.
	"tls": {
		// Enable TLS.
		"enabled": false,

		// Listen for connections on this port and redirect them to HTTPS port.
		// Cannot be a Unix socket.
		"http_redirect": ":80",

		// Add Strict-Transport-Security to headers, the value signifies age.
		// Zero or negative value turns it off.
		"strict_max_age": 604800,

		// Letsencrypt configuration.
		"autocert": {
			// Location of certificates.
			"cache": "/etc/letsencrypt/live/your.domain.here",

			// Contact address for this installation. LetsEncrypt will send
			// messages to this address in case of problems. Replace with your
			// own address or remove this line.
			"email": "noreply@example.com",

			// Domains served. Replace with your own domain name.
			"domains": ["whatever.example.com"]
		},

		// If "autocert" config is not defined, read static certificates from
		// these locations. Ignored if "autocert" is defined.
		"cert_file": "/etc/httpd/conf/your.domain.crt",
		"key_file": "/etc/httpd/conf/your.domain.key"
	},

	// Database configuration
	"store_config": {
		// XTEA encryption key for user IDs and topic names. 16 random bytes base64-encoded.
		// Generate your own and keep it secret. Otherwise your user IDs will be predictable
		// and it will be easy to spam your users.
		"uid_key": "la6YsO+bNX/+XIkOqc5Svw==",

		// Maximum number of results fetched in one DB call.
		"max_results": 1024,

		// DB adapter name to communicate with the DB backend.
		// Must be one of the adapters from the list below.
		"use_adapter": "mysql",

		// Configurations of individual adapters.
		"adapters": {
			// MySQL configuration. See https://godoc.org/github.com/go-sql-driver/mysql#Config
			// for other possible options.
			"mysql": {
				// MySQL connection settings.
				// See https://pkg.go.dev/github.com/go-sql-driver/mysql#Config for more info
				// and available fields and options.
				//"User": "root",
				//"Net": "tcp",
				//"Addr": "localhost",
				//"DBName": "tinode",
				// The 'collation=utf8mb4_unicode_ci' is optional but highly recommended for
				// emoji and certain CJK characters.
				//"Collation": "utf8mb4_unicode_ci",
				// Parse time values to time.Time. Required.
				//"ParseTime": true,

				// Deprecated connection settings. Kept for backward compatibility.
				// DSN, passed unchanged to MySQL driver. See https://github.com/go-sql-driver/mysql#dsn-data-source-name for syntax.
				"dsn": "root:password@tcp(localhost)/flowbot?parseTime=true&collation=utf8mb4_unicode_ci",
				// Name of the main database.
				// "database": "tinode",

				// MySQL connection pool settings.
				// Maximum number of open connections to the database. Default: 0 (unlimited).
				"max_open_conns": 64,
				// Maximum number of connections in the idle connection pool. If negative or zero,
				// no idle connections are retained.
				"max_idle_conns": 64,
				// Maximum amount of time a connection may be reused (in seconds).
				"conn_max_lifetime": 120,

				// DB request timeout (in seconds).
				// If not set (or <= 0), DB queries and transactions will run without a timeout.
				"sql_timeout": 60
			}
		}
	},

	// Configuration for stale account garbage collector.
	"acc_gc_config": {
		"enabled": true,
		// How often to run GC (seconds).
		"gc_period": 3600,
		// Number of accounts to delete in one pass.
		"gc_block_size": 10,
		// Minimum hours since account was last modified.
		"gc_min_account_age": 30
	},

	// Configuration of push notifications.
	"push": [
		{
			// Notificator which writes to STDOUT. Useful for debugging.
			"name":"stdout",
			"config": {
				// Disabled.
				"enabled": false
			}
		},
		{
			// Google FCM notificator.
			"name":"fcm",
			"config": {
				// Disabled. Won't work without the server key anyway. See below.
				"enabled": false,

				// Firebase project ID.
				"project_id": "your-project-id",

				// Service account credentials as json.
				// See instructions how to download the service account credentials file:
				// https://cloud.google.com/iam/docs/creating-managing-service-account-keys
				// Then insert the file contents here. Yes, this is convoluted, but that's Google's fault.
				"credentials": {
					"type": "service_account",
						"project_id": "your-project-id",
						"private_key_id": "some-random-looking-hex-number",
						"private_key": "-----BEGIN PRIVATE KEY----- base64-encoded bits of your private key \n-----END PRIVATE KEY-----\n",
						"client_email": "firebase-adminsdk-abc123@your-project-id.iam.gserviceaccount.com",
						"client_id": "1234567890123456789",
						"auth_uri": "https://accounts.google.com/o/oauth2/auth",
						"token_uri": "https://oauth2.googleapis.com/token",
						"auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
						"client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-abc123%40your-project-id.iam.gserviceaccount.com"
				},

				// An alternative way to provide Firebase service account credentials.
				"credentials_file": "/path/to/service-account-file-with-credentials.json",

				// Time in seconds before notification is discarded (by Google) if undelivered.
				"time_to_live": 3600,

				// Payload of AndroidNotification. If enabled, this will take precedence over data payload.
				"android": {
					// Set to false to push a data-only message.
					"enabled": false,

					// Android drawable resource ID to use as a notification icon.
					"icon": "ic_logo_push",

					// Notification color.
					"color": "#3949AB",

					// Name of intent filter which will catch this notification.
					"click_action": ".MessageActivity",

					// Notification of a new message. You can include custom "icon", "color", "click_action"
					// into this section and it will override the value above.
					"msg": {
						// Literal title string. Not recommended because it's not localized.
						"title": "",

						// Literal message body. Not recommended because it's not localized.
						"body": "",

						// Android string resource ID to use as a notification title. Localized.
						// Takes precedence over "title". "new_message" is "New message" in Tindroid.
						"title_loc_key": "new_message",

						// Android string resource ID to use as a notification body. Localized.
						// Takes precedence over "body".
						"body_loc_key": ""
					},

					// Notification of a new subscription. Same rules as section "msg" above.
					"sub": {
						// Android resource string ID to use as notification title. Localized.
						// "new_chat" is "New chat" in Tindroid.
						"title_loc_key": "new_chat",

						// Android resource string ID to use as notification body. Localized.
						"body_loc_key": ""
					}
				}
			}
		},
		{
			// Tinode Push Gateway, see https://github.com/tinode/chat/tree/master/server/push/tnpg.
			"name":"tnpg",
			"config": {
				// Disabled. Configure first then enable.
				"enabled": false,
				// Short name (URL) of the organization you registered at console.tinode.co.
				"org": "test",
				// Authentication token obtained from console.tinode.co
				"token": "jwt-security-token-obtained-from-console.tinode.co",
			}
		},
		{
			// Bark Push Gateway, see https://github.com/Finb/Bark.
			"name":"bark",
			"config": {
				// Disabled. Configure first then enable.
				"enabled": true,
				"buffer": 0,
				"sound": "healthnotification.caf",
				"icon": "",
				"api_url": "https://api.day.app",
			}
		}
	],

	// chatbot global config
	"chatbot": {
		"log": {
			"level": "info"
		},
		"workflow": {
			"worker": 2
		}
	},

	// Configuration of bots.
	"bots": [
		// Github
		{
			"name": "github",
			"enabled": true,
			"id": "",
			"secret": ""
		},
		// Pocket
		{
			"name": "pocket",
			"enabled": true,
			"consumer_key": ""
		}
	],

	// Configuration of vendors
	"vendors": {
		"oneai": {
			"api_key": ""
		},
		"rollbar": {
			"token": "",
			"environment": "development",
			"server_root": "github.com/sysatom/tinode"
		}
	}
}
