basePath: /service
definitions:
  model.KeyResult:
    properties:
      created_at:
        type: string
      current_value:
        type: integer
      id:
        type: integer
      initial_value:
        type: integer
      key_result_values:
        items:
          $ref: '#/definitions/model.KeyResultValue'
        type: array
      memo:
        type: string
      objective_id:
        type: integer
      sequence:
        type: integer
      tag:
        type: string
      target_value:
        type: integer
      title:
        type: string
      todos:
        items:
          $ref: '#/definitions/model.Todo'
        type: array
      topic:
        type: string
      uid:
        type: string
      updated_at:
        type: string
      value_mode:
        $ref: '#/definitions/model.ValueModeType'
    type: object
  model.KeyResultValue:
    properties:
      created_at:
        type: string
      id:
        type: integer
      key_result_id:
        type: integer
      memo:
        type: string
      updated_at:
        type: string
      value:
        type: integer
    type: object
  model.Objective:
    properties:
      created_data:
        type: string
      current_value:
        type: integer
      feasibility:
        type: string
      id:
        type: integer
      is_plan:
        type: integer
      key_results:
        items:
          $ref: '#/definitions/model.KeyResult'
        type: array
      memo:
        type: string
      motive:
        type: string
      plan_end:
        type: string
      plan_start:
        type: string
      progress:
        type: integer
      reviews:
        items:
          $ref: '#/definitions/model.Review'
        type: array
      sequence:
        type: integer
      tag:
        type: string
      title:
        type: string
      topic:
        type: string
      total_value:
        type: integer
      uid:
        type: string
      updated_date:
        type: string
    type: object
  model.Review:
    properties:
      created_at:
        type: string
      evaluations:
        items:
          $ref: '#/definitions/model.ReviewEvaluation'
        type: array
      id:
        type: integer
      objective_id:
        type: integer
      rating:
        type: integer
      topic:
        type: string
      type:
        $ref: '#/definitions/model.ReviewType'
      uid:
        type: string
      updated_at:
        type: string
    type: object
  model.ReviewEvaluation:
    properties:
      created_at:
        type: string
      id:
        type: integer
      question:
        type: string
      reason:
        type: string
      review_id:
        type: integer
      solving:
        type: string
      topic:
        type: string
      uid:
        type: string
      updated_at:
        type: string
    type: object
  model.ReviewType:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - ReviewTypeUnknown
    - ReviewMid
    - ReviewEnd
  model.Todo:
    properties:
      category:
        type: string
      complete:
        type: integer
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      is_remind_at_time:
        type: integer
      key_result_id:
        type: integer
      parent_id:
        type: integer
      priority:
        type: integer
      remark:
        type: string
      remind_at:
        type: integer
      repeat_end_at:
        type: integer
      repeat_method:
        type: string
      repeat_rule:
        type: string
      sequence:
        type: integer
      sub_todos:
        items:
          $ref: '#/definitions/model.Todo'
        type: array
      topic:
        type: string
      uid:
        type: string
      updated_at:
        type: string
    type: object
  model.ValueModeType:
    enum:
    - sum
    - last
    - avg
    - max
    type: string
    x-enum-varnames:
    - ValueSumMode
    - ValueLastMode
    - ValueAvgMode
    - ValueMaxMode
  protocol.Response:
    properties:
      data:
        description: Response data
      message:
        description: |-
          Error message, it is recommended to fill in a human-readable error message when the action fails to execute,
          or an empty string when it succeeds.
        type: string
      retcode:
        description: The return code, which must conform to the return code rules
          defined later on this page
        type: integer
      status:
        allOf:
        - $ref: '#/definitions/protocol.ResponseStatus'
        description: |-
          Execution status (success or failure), must be one of ok and failed,
          indicating successful and unsuccessful execution, respectively.
    type: object
  protocol.ResponseStatus:
    enum:
    - ok
    - failed
    type: string
    x-enum-varnames:
    - Success
    - Failed
  types.FormField:
    properties:
      key:
        type: string
      label:
        type: string
      option:
        items:
          type: string
        type: array
      placeholder:
        type: string
      rule:
        type: string
      type:
        $ref: '#/definitions/types.FormFieldType'
      value: {}
      value_type:
        $ref: '#/definitions/types.FormFieldValueType'
    type: object
  types.FormFieldType:
    enum:
    - text
    - password
    - number
    - color
    - file
    - month
    - date
    - time
    - email
    - url
    - radio
    - checkbox
    - range
    - select
    - textarea
    - hidden
    type: string
    x-enum-varnames:
    - FormFieldText
    - FormFieldPassword
    - FormFieldNumber
    - FormFieldColor
    - FormFieldFile
    - FormFieldMonth
    - FormFieldDate
    - FormFieldTime
    - FormFieldEmail
    - FormFieldUrl
    - FormFieldRadio
    - FormFieldCheckbox
    - FormFieldRange
    - FormFieldSelect
    - FormFieldTextarea
    - FormFieldHidden
  types.FormFieldValueType:
    enum:
    - string
    - bool
    - int64
    - float64
    - string_slice
    - int64_slice
    - float64_slice
    type: string
    x-enum-varnames:
    - FormFieldValueString
    - FormFieldValueBool
    - FormFieldValueInt64
    - FormFieldValueFloat64
    - FormFieldValueStringSlice
    - FormFieldValueInt64Slice
    - FormFieldValueFloat64Slice
  types.KV:
    additionalProperties: true
    type: object
  workflow.rule:
    properties:
      bot:
        type: string
      desc:
        type: string
      id:
        type: string
      input_schema:
        items:
          $ref: '#/definitions/types.FormField'
        type: array
      output_schema:
        items:
          $ref: '#/definitions/types.FormField'
        type: array
      title:
        type: string
    type: object
host: localhost:6060
info:
  contact:
    email: dev@tsundata.com
    name: API Support
  description: Flowbot Chatbot API
  license:
    name: GPL 3.0
    url: https://github.com/flowline-io/flowbot/blob/master/LICENSE
  termsOfService: http://swagger.io/terms/
  title: Flowbot API
  version: "1.0"
paths:
  /dev/example:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/protocol.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.KV'
              type: object
      summary: Show example
      tags:
      - dev
  /markdown/data:
    post:
      consumes:
      - application/json
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.Response'
      summary: save markdown data
      tags:
      - markdown
  /markdown/editor/{flag}:
    get:
      parameters:
      - description: Flag
        in: path
        name: flag
        required: true
        type: string
      produces:
      - text/html
      responses: {}
      summary: markdown editor page
      tags:
      - markdown
  /okr/key_result:
    post:
      consumes:
      - application/json
      parameters:
      - description: KeyResult data
        in: body
        name: keyResult
        required: true
        schema:
          $ref: '#/definitions/model.KeyResult'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.Response'
      summary: KeyResult create
      tags:
      - okr
  /okr/key_result/{id}/value:
    post:
      consumes:
      - application/json
      parameters:
      - description: key result id
        in: path
        name: id
        required: true
        type: integer
      - description: KeyResultValue data
        in: body
        name: KeyResultValue
        required: true
        schema:
          $ref: '#/definitions/model.KeyResultValue'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.Response'
      summary: KeyResult value create
      tags:
      - okr
  /okr/key_result/{id}/values:
    get:
      consumes:
      - application/json
      parameters:
      - description: key result id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/protocol.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.KeyResultValue'
                  type: array
              type: object
      summary: key result value list
      tags:
      - okr
  /okr/key_result/{sequence}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Sequence
        in: path
        name: sequence
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.Response'
      summary: KeyResult delete
      tags:
      - okr
    put:
      consumes:
      - application/json
      parameters:
      - description: Sequence
        in: path
        name: sequence
        required: true
        type: integer
      - description: KeyResult data
        in: body
        name: objective
        required: true
        schema:
          $ref: '#/definitions/model.KeyResult'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.Response'
      summary: KeyResult update
      tags:
      - okr
  /okr/key_result_value/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: key result id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/protocol.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.KeyResultValue'
              type: object
      summary: KeyResult value detail
      tags:
      - okr
  /okr/objective:
    post:
      consumes:
      - application/json
      parameters:
      - description: objective data
        in: body
        name: objective
        required: true
        schema:
          $ref: '#/definitions/model.Objective'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.Response'
      summary: objective create
      tags:
      - okr
  /okr/objective/{sequence}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Sequence
        in: path
        name: sequence
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.Response'
      summary: objective delete
      tags:
      - okr
    get:
      consumes:
      - application/json
      parameters:
      - description: Sequence
        in: path
        name: sequence
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/protocol.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Objective'
              type: object
      summary: objective detail
      tags:
      - okr
    put:
      consumes:
      - application/json
      parameters:
      - description: Sequence
        in: path
        name: sequence
        required: true
        type: integer
      - description: objective data
        in: body
        name: objective
        required: true
        schema:
          $ref: '#/definitions/model.Objective'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.Response'
      summary: objective update
      tags:
      - okr
  /okr/objectives:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/protocol.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Objective'
                  type: array
              type: object
      summary: objective list
      tags:
      - okr
  /webhook/trigger/{flag}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Flag
        in: path
        name: flag
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/protocol.Response'
      summary: trigger webhook
      tags:
      - webhook
  /workflow/actions:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/protocol.Response'
            - properties:
                data:
                  additionalProperties:
                    items:
                      $ref: '#/definitions/workflow.rule'
                    type: array
                  type: object
              type: object
      summary: get chatbot actions
      tags:
      - workflow
swagger: "2.0"
