name: Docker

on:
  push:
    branches:
      - 'extra'
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout server repo
        uses: actions/checkout@v3

      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: '^1.20'

      - id: go-cache-paths
        run: |
          echo "go-build=$(go env GOCACHE)" >> $GITHUB_ENV
          echo "go-mod=$(go env GOMODCACHE)" >> $GITHUB_ENV

      # Cache go build cache, used to speedup go test
      - name: Go Build Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

      # Cache go mod cache, used to speedup builds
      - name: Go Mod Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: sysatom
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build go
        run: |
          go env -w GOOS=linux
          go env -w GOARCH=amd64
          go env
          go mod download
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o flowbot github.com/flowline-io/flowbot/cmd

      - uses: actions/upload-artifact@v3
        with:
          name: flowbot
          path: app

      - name: Build and push server
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          file: deployments/docker/Dockerfile
          tags: ghcr.io/flowline-io/flowbot:latest
